<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="imgProfilePic.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAAAAAAAD/2wBDAAkGBwgHCAgIBwgFBgoGBwoIBgYHBw8IFQgKIB0iIiAdHx8k
        HSggJBoxGx8TITEhJSkrLi4uFx8zODMsNygtLiv/2wBDAQoKCg0NDRANDRorGRUZKysrKysrKy0rKysr
        Ky0rKysrKysrKysrKysrKysrKysrKysrKysrKysrKysrKysrKyv/wAARCACWAJYDASIAAhEBAxEB/8QA
        GwABAAIDAQEAAAAAAAAAAAAAAAUGAQMEAgf/xAA2EAACAgEBAwgHCAMAAAAAAAAAAgEDBBIFESEiMTJB
        QlFSsTNicXKBkdETNFNhc5OhwRQjkv/EABUBAQEAAAAAAAAAAAAAAAAAAAAB/8QAFhEBAQEAAAAAAAAA
        AAAAAAAAAAER/9oADAMBAAIRAxEAPwD62YAKgAAAAAAAAAAAAAAAAAAAAAyDAAAAAAAAAAAAADxZdVXH
        +yypPebSaYz8WZ3fb1AdIPKWJZG+t63j1W1HoAAAAAAAAAAAAAAAAAAAMMypEs0qsLGpmbmVSFzdqO8y
        mNLInR+062+hnbOXLN/j1zyU9J6z93wIssiWszMtMzMs0t0mZtRgAD0jSkwyMySvRZW0yS2BtWZmK8mV
        7lv6Pz+pDgC3AjNjZU2LNFk6mqjfWzdpO74EmRQAAAAAAAAAAAAAPFzxXXZZPMiSx7OXaczGJdu7URH8
        wBXGaWaWmeLTMs35mACoAAAAAN2JbNN9bxPReNXu9ZaColrpmZrrmedq0n+BSPYAIoAAAAAAAAAABoz0
        mzGvWPw5lfM3jhMTE8qGAqIN+bjzjXukxw37628SdRoKgAAAAAysS0wsRqlphVLYi6FVY7MQpA7Ix5uv
        V5jkUcWb8+qCfJSAACgAAAAAAAAAAAADk2hiRl17o0rYnGtm8pK/YjVtKWQyMvBlYtZpycWrJjdauqV6
        Ni8mVELFXBJ37KZJma7qGjw2tok542fdM7tWJ++hUchtx8ezIshK41S3SbqWO+SQx9kQ0xN11bR4auVL
        fElaKa8ddFSqkdrvb2gx5xMdcata09tjeKe83ABQAEAAAAAAAAAA133V0JL2Sqwvzae6CjYceTtLHx5m
        NX27r2U/uSKzdoW5Eyqy1VfhVuLe2TiGJqRu2ve8zFcV0R6q6p+cnHZk32ekttb1WadxqAGZnfO+eVJg
        ADMTMc0spuqzMivoW2rHhZtUGgASlG2bFmIurV48S8mfoSWNmUZMbq3VW/DbkyVkzEzExMSyyvRZeyMN
        W0ELhbVZJhMmWdeZbetfb3kyrQ8QyyrQ0alZeZgrIAIAAAAADxbYtSNZZOlUjezFczMl8myXadKrwrr6
        lU7dt5Eyy46zwXjZ6zdUEUWJQAAAAAAAAAAAAAO/ZmdOO0JZLNW8/wDE95wAC3c8b4BwbHyJuplGnU1H
        D3k6jvIoAAAAAq+W82X2vM9KyflvNJ7u9JZ+pPmeCoAAAAAAAAAAAAAAAA79jPKZULv4W1zH9k+V3ZX3
        uv4+UliJVgAAMmAAKpd6Sz9SfM8AFQAAAAAAAAAAAAAAAB2bJ+91/HyksQBKsZiAAB//2Q==
</value>
  </data>
</root>